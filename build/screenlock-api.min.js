/**
 * @license
 * screenlock-polyfill
 * @author danrossi / https://github.com/danrossi
 * Copyright (c) 2017 Google
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).ScreenLockApi=n()}(this,(function(){"use strict";function e(){return new Promise((e=>{const n=document.querySelector(".screen-lockable");n&&n.classList.add("landscape"),(screen&&screen.dispatchEvent||screen&&screen.orientation.dispatchEvent||window.dispatchEvent)(new Event("orientationchange")),e()}))}function n(){const e=document.querySelector(".screen-lockable");e&&e.classList.remove("landscape"),(screen&&screen.dispatchEvent||screen&&screen.orientation.dispatchEvent||window.dispatchEvent)(new Event("orientationchange"))}if(window.screen){const t=screen.lockOrientation||screen.mozLockOrientation||screen.msLockOrientation||screen.orientation&&screen.orientation.lock&&screen.orientation.lock.bind(screen.orientation);screen.lockOrientationUniversal=t||e,screen.supportsScreenLock=!!t,screen.unlockOrientationUniversal=screen.unlockOrientation||screen.mozUnlockOrientation||screen.msUnlockOrientation||screen.orientation&&screen.orientation.unlock&&screen.orientation.unlock.bind(screen.orientation)||n}else{const t=[];window.screen={supportsScreenLock:!1,addEventListener:(e,n)=>{t[e]||(t[e]=[]),t[e].push(n)},dispatchEvent:e=>{t[e].forEach((e=>e()))}},window.screen.lockOrientationUniversal=e,window.screen.unlockOrientationUniversal=n}return class{static get supportsScreenLock(){return screen.supportsScreenLock}static lockElement(e){e.classList.add("screen-lockable")}static lock(e){return screen.lockOrientationUniversal(e)}static unlock(){return screen.unlockOrientationUniversal()}}}));
